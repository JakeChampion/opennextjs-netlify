name: Next.js e2e test suite

on:
  pull_request:
  push:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      test-chunks: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
      test-chunk-ids: ${{ steps['set-test-chunk-ids'].outputs['test-chunk-ids'] }}
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - id: set-test-chunks
        name: Set Chunks
        run:
          echo "test-chunks=$(npx jest -c test/e2e/jest.config.js --listTests --json | jq -cM '[_nwise(length / 24 |
          floor)]')" >> $GITHUB_OUTPUT

      - id: set-test-chunk-ids
        name: Set Chunk IDs
        run: echo "test-chunk-ids=$(echo $CHUNKS | jq -cM 'to_entries | map(.key)')" >> $GITHUB_OUTPUT
        env:
          CHUNKS: ${{ steps['set-test-chunks'].outputs['test-chunks'] }}
  test:
    runs-on: ubuntu-latest
    name: test (chunk ${{ matrix.chunk }})
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs['test-chunk-ids']) }}
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - name: Installing Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          check-latest: true
      - name: jest
        run:
          echo $CHUNKS | jq '.[${{ matrix.chunk }}] | .[] | @text' | xargs npx jest --reporters=jest-junit
          --reporters=default -c test/e2e/jest.config.js
        env:
          CHUNKS: ${{ needs.setup.outputs['test-chunks'] }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_BOT_AUTH_TOKEN }}
          NETLIFY_SITE_ID: 1d5a5c76-d445-4ae5-b694-b0d3f2e2c395
      - uses: phoenix-actions/test-reporting@v8
        if: ${{ always() }}
        name: Report Test Results
        with:
          name: E2E Test chunk ${{ matrix.chunk }}
          path: 'reports/**/*.xml' # Path to test results (inside artifact .zip)
          output-to: 'checks'
          max-annotations: 0 # Maximum number of annotations to be created
          reporter: jest-junit # Format of test results
      - name: Read output variables
        if: success() || failure()
        run: |
          echo "url is ${{ steps.test-report.outputs.runHtmlUrl }}"

      # - uses: actions/upload-artifact@v3 # upload test results
      #   if: ${{ always() }}
      #   with:
      #     name: test-results-${{ matrix.chunk }}
      #     path: reports/jest-*.xml
  # report:
  #   runs-on: ubuntu-latest
  #   if: ${{ always() }}
  #   needs:
  #     - test
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #       with:
  #         path: reports
  #     - uses: dorny/test-reporter@v1
  #       with:
  #         name: Jest Tests
  #         path: 'reports/**/*.xml' # Path to test results (inside artifact .zip)
  #         max-annotations: 49 # Maximum number of annotations to be created
  #         reporter: jest-junit # Format of test results
