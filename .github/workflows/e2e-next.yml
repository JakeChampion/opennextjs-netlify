name: Next.js e2e test suite

on:
  pull_request:
  push:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      test-files: ${{ steps['set-test-files'].outputs['test-files'] }}
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - id: set-test-files
        name: Get test files
        # Extracts the list of all test files as JSON and assign to the job output
        run: echo "test-files=$(npx jest -c test/e2e/jest.config.js --listTests --json)" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    name: test (${{ matrix.test-file }})
    needs:
      - setup
    strategy:
      fail-fast: false
      matrix:
        # Creates a job for each chunk ID. This will be assinged one or more test files to run
        test-file: ${{ fromJson(needs.setup.outputs['test-files']) }}
    steps:
      - uses: actions/checkout@v3
      - run: npm install
      - name: Run tests
        run:
          # Runs the test for the current matrix job, saving the results as a JUnit XML file
          npx jest --reporters=jest-junit --reporters=default -c test/e2e/jest.config.js ${{ matrix.test-file }}
      # - uses: phoenix-actions/test-reporting@v10
      #   if: ${{ always() }}
      #   name: Report Test Results
      #   # Generates annotations for the test failures
      #   id: test-report
      #   with:
      #     name: E2E Test chunk ${{ matrix.chunk }}
      #     path: 'reports/**/*.xml' # Path to test results (inside artifact .zip)
      #     output-to: 'checks'
      #     max-annotations: 49 # Maximum number of annotations to be created
      #     reporter: jest-junit # Format of test results

      - uses: actions/upload-artifact@v3
        # upload test results
        if: ${{ always() }}
        with:
          name: test-results
          path: reports/jest-*.xml
  report:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: reports
      - name: Combine reports
        # The test reporter can handle multiple files, but these have random filenames so the output is better when combined
        run: npx junit-report-merger test-results.xml reports/**/*.xml
      - uses: phoenix-actions/test-reporting@v10
        with:
          name: Jest Tests
          output-to: 'step-summary'
          path: 'test-results.xml'
          max-annotations: 49
          reporter: jest-junit
